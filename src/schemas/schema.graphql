extend input ProductInput {
  specification: String
}

extend type Product {
  specification: String
}
extend type CatalogProduct {
  specification: String
}

extend type Query {
  "Gets items from a shop catalog"
  catalogProducts(
    "Provide a list of shop IDs from which you want to get catalog items"
    shopIds: [ID]!

    "Optionally provide a list of tag IDs to further filter the item list"
    tagIds: [ID]

    "Optionally provide a list of tag IDs to further filter the item list"
    tagSlugs: [String]

    "exclude Product Ids"
    excludeProductIds: [ID]

    "Only those with the same tags"
    tagMatchs: Boolean = false

    "Additional filters to apply"
    booleanFilters: [CatalogBooleanFilter]

    "Return only results that come after this cursor. Use this with `first` to specify the number of results to return."
    after: ConnectionCursor

    "Return only results that come before this cursor. Use this with `last` to specify the number of results to return."
    before: ConnectionCursor

    "Return at most this many results. This parameter may be used with either `after` or `offset` parameters."
    first: ConnectionLimitInt

    "Return at most this many results. This parameter may be used with the `before` parameter."
    last: ConnectionLimitInt

    "Return only results that come after the Nth result. This parameter may be used with the `first` parameter."
    offset: Int

    "Return results sorted in this order"
    sortOrder: SortOrder = desc

    "Provide a Currency code if sortBy is minPrice"
    sortByPriceCurrencyCode: String

    "By default, items are sorted by when they were last updated, most recently updated first. Set this to sort by one of the other allowed fields"
    sortBy: CatalogItemSortByField = updatedAt
  ): CatalogItemConnection
}
